---
import {
  db,
  desc,
  eq,
  and,
  sql,
  Subsession,
  SubsessionRaceResults,
} from "astro:db";
import SubsessionsLayout from "$lib/layouts/subsessions.astro";
import userIds from "$lib/utils/user-ids";
export function getStaticPaths() {
  return userIds.map((id) => ({ params: { id } }));
}
const { id } = Astro.params;
const seoTitle = `Subsessions - ${id}`;
const seoDescription = `Subsessions page for user ID: ${id}`;
const subsessionRaceResults = await db
  .select()
  .from(SubsessionRaceResults)
  .where(
    and(
      eq(SubsessionRaceResults.cust_id, Number(id)),
      sql`${SubsessionRaceResults.simsession_name} IN ${["RACE", "FEATURE", "N/A"]}`
    )
  );
const subsessionsWithoutResult = await db
  .select()
  .from(Subsession)
  .where(
    sql`${Subsession.subsession_id} IN ${subsessionRaceResults.map((subsession) => subsession.subsession_id)}`
  )
  .orderBy(desc(Subsession.subsession_id));
const subsessions = subsessionsWithoutResult.map((subsessionWithoutResult) => {
  const { subsession_id } = subsessionWithoutResult;
  const userResult = subsessionRaceResults.find(
    (subsessionRaceResult) =>
      subsessionRaceResult.subsession_id === subsession_id
  );
  return {
    ...subsessionWithoutResult,
    userResult,
  };
});
---

<SubsessionsLayout {id} {seoTitle} {seoDescription} {subsessions} />
