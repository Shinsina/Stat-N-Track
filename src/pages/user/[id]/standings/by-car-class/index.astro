---
	import { db, eq, SubsessionRaceResults } from "astro:db";
  import DefaultLayout from "$lib/layouts/default.astro";
	import userIds from "$lib/utils/user-ids";
	export function getStaticPaths() {
		return userIds.map((id) => ({ params: { id } }));
	}
  const { id } = Astro.params;
	const carClassMappings = await db
  .selectDistinct({ car_class_id: SubsessionRaceResults.car_class_id, car_class_short_name: SubsessionRaceResults.car_class_short_name })
  .from(SubsessionRaceResults)
  .where(eq(SubsessionRaceResults.cust_id, Number(id)));
	const carClassMap = new Map();
	const carClassNames: Set<string> = new Set();
		carClassMappings.forEach((carClassMapping) => {
		const { car_class_id, car_class_short_name } = carClassMapping;
		const carClassNameTrimmed = car_class_short_name.trim();
		if (!carClassMap.get(car_class_short_name)) {
			carClassMap.set(carClassNameTrimmed, car_class_id);
			carClassNames.add(carClassNameTrimmed);
		}
	});
	const title = `Car Class Standings - ${id}`;
	const description = `Car class standings page for user ID: ${id}`;
---


<DefaultLayout {title} {description}>
	<div class="text-center text-3xl">
	 {Array.from(carClassNames).sort().map((carClassName) => (<div><a class="underline" href=`/Stat-N-Track/user/${id}/standings/by-car-class/${carClassMap.get(carClassName)}` rel="prefetch">{carClassName}</a></div>))}
	</div>
</DefaultLayout>
