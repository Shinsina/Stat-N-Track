---
import { db, desc, eq, and, Standing } from "astro:db";
import StandingsLayout from "$lib/layouts/standings.astro";
import userIds from "$lib/utils/user-ids";
export async function getStaticPaths() {
  const mappings = await Promise.all(
    userIds.map(async (userId) => {
      const values = await db
        .selectDistinct({ car_class_id: Standing.car_class_id })
        .from(Standing)
        .where(eq(Standing.cust_id, Number(userId)));
      const carClassIds = values.map((value) => Number(value.car_class_id));
      return { userId, carClassIds };
    })
  );
  return mappings
    .map((mapping) => {
      const { userId, carClassIds } = mapping;
      return carClassIds.map((carClassId) => ({
        params: { id: userId, carClassId },
      }));
    })
    .flat();
}

const { id, carClassId } = Astro.params;
const seoTitle = `Standings list for car class ID - ${carClassId} and user ID - ${id}`;
const seoDescription = `Car class standings page for car class ID: ${carClassId} and user ID: ${id}`;
const standingsResults = await db
  .select()
  .from(Standing)
  .where(
    and(
      eq(Standing.cust_id, Number(id)),
      eq(Standing.car_class_id, Number(carClassId))
    )
  )
  .orderBy(desc(Standing.season_id));
---

<StandingsLayout {id} {seoTitle} {seoDescription} {standingsResults} />
