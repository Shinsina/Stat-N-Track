---
import { connectToDatabase } from "$lib/mongodb";
import StandingsLayout from "$lib/layouts/standings.astro";
export async function getStaticPaths() {
  // @todo Establish a root level list of valid userIds
  const userIds = [300752, 815162];
	const dbConnection = await connectToDatabase();
	const db = dbConnection.db;
	const collection = db.collection("subsessions");
  const mappings = await Promise.all(userIds.map(async (userId) => ({
    userId,
    years: await collection.distinct("season_year", { "session_results.2.results": { $elemMatch: { cust_id: userId } }}),
  })));
  return mappings.map((mapping) => {
    const { userId, years } = mapping;
    return years.map((year) => ({ params: { id: userId, year }}));
  }).flat();
}
const { id, year } = Astro.params;
const dbConnection = await connectToDatabase();
const { db } = dbConnection;
const collection = db.collection("standings");
const standingsResults = await collection
  .find({ "season_driver_data.cust_id": Number(id), season_name: { $regex: year } })
  .sort({ season_id: -1 })
  .toArray();
---

<StandingsLayout {id} {standingsResults} />
