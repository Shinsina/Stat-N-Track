---
import fieldIdToLabelMap from "$lib/utils/field-id-to-label-map";
import DefaultLayout from "$lib/layouts/default.astro";
const { id, seoTitle, seoDescription, standingsResults } = Astro.props;
const finalData: Array<Record<string, any>> = standingsResults.map(
  (result: Record<string, any>) => {
    const {
      car_class_id,
      division,
      division_rank,
      overall_rank,
      season_id,
      season_name,
      weeks_counted,
      starts,
      wins,
      top5,
      top25_percent,
      poles,
      avg_start_position,
      avg_finish_position,
      avg_field_size,
      laps,
      laps_led,
      incidents,
      points,
    } = result;
    const [, year] = season_name.trim().match(/([0-9]{4}) Season/) ||
      season_name.trim().match(/([0-9]{4})$/) ||
      season_name.trim().match(/^([0-9]{4})/) || [0, 0];
    const [, season_number_of_year] = season_name.match(
      /Season ([0-9]{1})/
    ) || [0, 0];
    return {
      season_id,
      year,
      season_number_of_year,
      car_class_id,
      season_summary: season_id,
      division,
      division_rank,
      overall_rank,
      points,
      season_name,
      weeks_counted,
      starts,
      wins,
      top5,
      top25_percent,
      poles,
      avg_start_position,
      avg_finish_position,
      avg_field_size,
      laps,
      laps_led,
      incidents,
    };
  }
);
const generateLinkForKey = ({
  key,
  resultAtKey,
  carClassId,
}: {
  key: string;
  resultAtKey: unknown;
  carClassId: string;
}) => {
  if (key === "season_id") {
    return `/Stat-N-Track/user/${id}/season/${resultAtKey}/car-class/${carClassId}`;
  } else if (key === "year") {
    return `/Stat-N-Track/user/${id}/standings/by-year/${resultAtKey}`;
  } else if (key === "car_class_id") {
    return `/Stat-N-Track/user/${id}/standings/by-car-class/${resultAtKey}`;
  } else if (key === "season_summary") {
    return `/Stat-N-Track/user/${id}/season/${resultAtKey}/car-class/${carClassId}/season-summary`;
  }
  return null;
};
---

<DefaultLayout title={seoTitle} description={seoDescription}>
  <div class="grid grid-cols-1 pt-6 overflow-x-scroll">
    <table x-ref="Table" x-data="table" class="text-center col-span-1">
      <tr x-ref="Headings"
        >{
          Object.keys(finalData[0]).map((key) => (
            <th
              id={`Table ${key} ${finalData.length}`}
              class="border-2"
              x-on:click="sort"
            >
              {fieldIdToLabelMap.get(key) || key}
            </th>
          ))
        }</tr
      >
      {
        finalData.map((result, rowNumber) => (
          <tr x-ref={`Table ${rowNumber}`}>
            {Object.keys(result).map((key: string) => (
              <td
                x-ref={`Table ${key} ${rowNumber}`}
                id={`${key}~${rowNumber}~${result[key]}`}
                class="border-2"
              >
                {generateLinkForKey({
                  key,
                  resultAtKey: result[key],
                  carClassId: result.car_class_id,
                }) ? (
                  <a
                    class="underline"
                    rel="prefetch"
                    href={generateLinkForKey({
                      key,
                      resultAtKey: result[key],
                      carClassId: result.car_class_id,
                    })}
                  >
                    {result[key]}
                  </a>
                ) : (
                  result[key]
                )}
              </td>
            ))}
          </tr>
        ))
      }
    </table>
  </div>
</DefaultLayout>
